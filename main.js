!function(){"use strict";class e{constructor(){this.boardSize=8,this.container=null,this.boardEl=null,this.cells=[],this.cellClickListeners=[],this.cellEnterListeners=[],this.cellLeaveListeners=[],this.newGameListeners=[],this.saveGameListeners=[],this.loadGameListeners=[]}bindToDOM(e){if(!(e instanceof HTMLElement))throw new Error("container is not HTMLElement");this.container=e}drawUi(e){this.checkBinding(),this.container.innerHTML='\n      <div class="controls">\n        <button data-id="action-restart" class="btn">New Game</button>\n        <button data-id="action-save" class="btn">Save Game</button>\n        <button data-id="action-load" class="btn">Load Game</button>\n      </div>\n      <div class="board-container">\n        <div data-id="board" class="board"></div>\n      </div>\n    ',this.newGameEl=this.container.querySelector("[data-id=action-restart]"),this.saveGameEl=this.container.querySelector("[data-id=action-save]"),this.loadGameEl=this.container.querySelector("[data-id=action-load]"),this.newGameEl.addEventListener("click",(e=>this.onNewGameClick(e))),this.saveGameEl.addEventListener("click",(e=>this.onSaveGameClick(e))),this.loadGameEl.addEventListener("click",(e=>this.onLoadGameClick(e))),this.boardEl=this.container.querySelector("[data-id=board]"),this.boardEl.classList.add(e);for(let e=0;e<this.boardSize**2;e+=1){const a=document.createElement("div");a.classList.add("cell","map-tile","map-tile-"+((t=e)>=(s=this.boardSize)**2||t<0?"invalid value":0===t?"top-left":t===s-1?"top-right":t===s**2-s?"bottom-left":t===s**2-1?"bottom-right":t%s==0?"left":(t+1)%s==0?"right":t>0&&t<s?"top":t<s**2-1&&t>s**2-s?"bottom":"center")),a.addEventListener("mouseenter",(e=>this.onCellEnter(e))),a.addEventListener("mouseleave",(e=>this.onCellLeave(e))),a.addEventListener("click",(e=>this.onCellClick(e))),this.boardEl.appendChild(a)}var t,s;this.cells=Array.from(this.boardEl.children)}redrawPositions(e){for(const e of this.cells)e.innerHTML="";for(const s of e){const e=this.boardEl.children[s.position],a=document.createElement("div");a.classList.add("character",s.character.type);const i=document.createElement("div");i.classList.add("health-level");const r=document.createElement("div");r.classList.add("health-level-indicator","health-level-indicator-"+((t=s.character.health)<15?"critical":t<50?"normal":"high")),r.style.width=`${s.character.health}%`,i.appendChild(r),a.appendChild(i),e.appendChild(a)}var t}addCellEnterListener(e){this.cellEnterListeners.push(e)}addCellLeaveListener(e){this.cellLeaveListeners.push(e)}addCellClickListener(e){this.cellClickListeners.push(e)}addNewGameListener(e){this.newGameListeners.push(e)}addSaveGameListener(e){this.saveGameListeners.push(e)}addLoadGameListener(e){this.loadGameListeners.push(e)}onCellEnter(e){e.preventDefault();const t=this.cells.indexOf(e.currentTarget);this.cellEnterListeners.forEach((e=>e.call(null,t)))}onCellLeave(e){e.preventDefault();const t=this.cells.indexOf(e.currentTarget);this.cellLeaveListeners.forEach((e=>e.call(null,t)))}onCellClick(e){const t=this.cells.indexOf(e.currentTarget);this.cellClickListeners.forEach((e=>e.call(null,t)))}onNewGameClick(e){e.preventDefault(),this.newGameListeners.forEach((e=>e.call(null)))}onSaveGameClick(e){e.preventDefault(),this.saveGameListeners.forEach((e=>e.call(null)))}onLoadGameClick(e){e.preventDefault(),this.loadGameListeners.forEach((e=>e.call(null)))}static showError(e){alert(e)}static showMessage(e){alert(e)}selectCell(e,t="yellow"){this.deselectCell(e),this.cells[e].classList.add("selected",`selected-${t}`)}deselectCell(e){this.cells.forEach((e=>e.classList.remove("selected")))}showCellTooltip(e,t){this.cells[t].title=e}hideCellTooltip(e){this.cells[e].title=""}showDamage(e,t){return new Promise((s=>{const a=this.cells[e],i=document.createElement("span");i.textContent=t,i.classList.add("damage"),a.appendChild(i),i.addEventListener("animationend",(()=>{a.removeChild(i),s()}))}))}setCursor(e){this.boardEl.style.cursor=e}checkBinding(){if(null===this.container)throw new Error("GamePlay not bind to DOM")}}var t="prairie";class s{constructor(e){this.characters=e}set characters(e){this._characters=e}get characters(){return this._characters}}function*a(e,t){const s=Math.floor(Math.random()*e.length),a=Math.floor(Math.random()*t+1);yield new e[s](a)}function i(e,t,i){const r=[];for(let s=0;s<i;s+=1){const s=a(e,t).next().value;r.push(s)}return new s(r)}class r{constructor(e,t="generic"){if(this.level=e,this.attack=0,this.defence=0,this.health=50,this.type=t,new.target===r)throw new Error("Invalid action")}}class n{constructor(e,t){if(!(e instanceof r))throw new Error("character must be instance of Character or its children");if("number"!=typeof t)throw new Error("position must be a number");this.character=e,this.position=t}}var l={auto:"auto",pointer:"pointer",crosshair:"crosshair",notallowed:"not-allowed"};class o extends r{constructor(e){super(e),this.attack=25,this.defence=25,this.health=50,this.type="bowman"}}class c extends r{constructor(e){super(e),this.level=e,this.attack=10,this.defence=10,this.health=50,this.type="daemon"}}class h extends r{constructor(e){super(e),this.attack=10,this.defence=40,this.health=50,this.type="magician"}}class d extends r{constructor(e){super(e),this.attack=40,this.defence=10,this.health=50,this.type="swordsman"}}class u extends r{constructor(e){super(e),this.attack=40,this.defence=10,this.health=50,this.type="undead"}}class m extends r{constructor(e){super(e),this.attack=25,this.defence=25,this.health=50,this.type="vampire"}}const v=new e;v.bindToDOM(document.querySelector("#game-container"));const p=new class{constructor(e){this.storage=e}save(e){this.storage.setItem("state",JSON.stringify(e))}load(){try{return JSON.parse(this.storage.getItem("state"))}catch(e){throw new Error("Invalid state")}}}(localStorage),C=new class{constructor(e,t){this.gamePlay=e,this.stateService=t,this.cursors=l}init(){this.gamePlay.drawUi(t);const e=i([o,h,d],2,3),s=i([c,u,m],2,3);this.positionedCharacters=[];const a=[0,1,8,9,16,17,24,25,32,33,40,41,48,49,56,57],r=[6,7,14,15,22,23,30,31,38,39,46,47,54,55,62,63];for(let t=0;t<e.characters.length;t+=1){const i=Math.floor(Math.random()*(16-t)),l=Math.floor(Math.random()*(16-t));this.positionedCharacters.push(new n(e.characters[t],a[i])),this.positionedCharacters.push(new n(s.characters[t],r[l])),a.splice(i,1),r.splice(l,1)}this.gamePlay.redrawPositions(this.positionedCharacters),this.onCellEnter=this.onCellEnter.bind(this),this.onCellLeave=this.onCellLeave.bind(this),this.onCellClick=this.onCellClick.bind(this),this.onMouseOver=this.onMouseOver.bind(this),this.gamePlay.addCellEnterListener(this.onCellEnter),this.gamePlay.addCellLeaveListener(this.onCellLeave),this.gamePlay.addCellClickListener(this.onCellClick),this.gamePlay.cells.forEach((e=>e.addEventListener("mouseover",this.onMouseOver)))}onMouseOver(e){const t=["magician","bowman","swordsman"];for(let s=0;s<t.length;s+=1)e.target.classList.contains(t[s])&&this.gamePlay.setCursor(this.cursors.pointer);e.target.classList.contains("character")||this.gamePlay.setCursor(this.cursors.auto)}onCellClick(t){const s=["magician","bowman","swordsman"];if(!this.gamePlay.cells[t].querySelector(".character"))return;let a;for(const e of this.positionedCharacters)e.position===t&&(a=e.character.type);for(let e=0;e<s.length;e+=1)if(a===s[e])return void this.gamePlay.selectCell(t);e.showError("Choose a character from your team")}onCellEnter(e){if(!this.gamePlay.cells[e].querySelector(".character"))return;const t=this.getCharacterInfo(e);this.gamePlay.showCellTooltip(t,e)}getCharacterInfo(e){let t;for(const s of this.positionedCharacters)s.position===e&&(t=`🎖${s.character.level}⚔${s.character.attack}🛡${s.character.defence}❤${s.character.health}`);return t}onCellLeave(e){this.gamePlay.hideCellTooltip(e)}}(v,p);C.init()}();
//# sourceMappingURL=main.js.map