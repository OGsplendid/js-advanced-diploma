{"version":3,"file":"main.js","mappings":"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","sources":["webpack://list-editor/./src/js/themes.js","webpack://list-editor/./src/js/generators.js","webpack://list-editor/./src/js/Character.js","webpack://list-editor/./src/js/PositionedCharacter.js","webpack://list-editor/./src/js/app.js","webpack://list-editor/./src/js/GamePlay.js","webpack://list-editor/./src/js/utils.js","webpack://list-editor/./src/js/GameStateService.js","webpack://list-editor/./src/js/GameController.js"],"sourcesContent":["const themes = {\n  prairie: 'prairie',\n  desert: 'desert',\n  arctic: 'arctic',\n  mountain: 'mountain',\n};\n\nexport default themes;\n","import Team from './Team';\n\n/**\n * Формирует экземпляр персонажа из массива allowedTypes со\n * случайным уровнем от 1 до maxLevel\n *\n * @param allowedTypes массив классов\n * @param maxLevel максимальный возможный уровень персонажа\n * @returns генератор, который при каждом вызове\n * возвращает новый экземпляр класса персонажа\n *\n */\nexport function* characterGenerator(allowedTypes, maxLevel) {\n  const index = Math.floor(Math.random() * allowedTypes.length);\n  const level = Math.floor(Math.random() * maxLevel + 1);\n  yield new allowedTypes[index](level);\n}\n\n/**\n * Формирует массив персонажей на основе characterGenerator\n * @param allowedTypes массив классов\n * @param maxLevel максимальный возможный уровень персонажа\n * @param characterCount количество персонажей, которое нужно сформировать\n * @returns экземпляр Team, хранящий экземп персонажей. Кол-во персонажей в команде - characterCount\n * */\nexport function generateTeam(allowedTypes, maxLevel, characterCount) {\n  const actualCharacters = [];\n  for (let i = 0; i < characterCount; i += 1) {\n    const playerGenerator = characterGenerator(allowedTypes, maxLevel);\n    const newChar = playerGenerator.next().value;\n    actualCharacters.push(newChar);\n  }\n  return actualCharacters;\n}\n","/**\n * Базовый класс, от которого наследуются классы персонажей\n * @property level - уровень персонажа, от 1 до 4\n * @property attack - показатель атаки\n * @property defence - показатель защиты\n * @property health - здоровье персонажа\n * @property type - строка с одним из допустимых значений:\n * swordsman\n * bowman\n * magician\n * daemon\n * undead\n * vampire\n */\nexport default class Character {\n  constructor(level, type = 'generic') {\n    this.level = level;\n    this.attack = 0;\n    this.defence = 0;\n    this.health = 50;\n    this.type = type;\n    if (new.target === Character) {\n      throw new Error('Invalid action');\n    }\n    // TODO: выбросите исключение, если кто-то использует \"new Character()\"\n  }\n}\n","import Character from './Character';\n\nexport default class PositionedCharacter {\n  constructor(character, position) {\n    if (!(character instanceof Character)) {\n      throw new Error('character must be instance of Character or its children');\n    }\n\n    if (typeof position !== 'number') {\n      throw new Error('position must be a number');\n    }\n\n    this.character = character;\n    this.position = position;\n  }\n}\n","/**\n * Entry point of app: don't change this\n */\nimport GamePlay from './GamePlay';\nimport GameController from './GameController';\nimport GameStateService from './GameStateService';\n\nconst gamePlay = new GamePlay();\ngamePlay.bindToDOM(document.querySelector('#game-container'));\n\nconst stateService = new GameStateService(localStorage);\n\nconst gameCtrl = new GameController(gamePlay, stateService);\ngameCtrl.init();\n\n// don't write your code here\n","import { calcHealthLevel, calcTileType } from './utils';\n\nexport default class GamePlay {\n  constructor() {\n    this.boardSize = 8;\n    this.container = null;\n    this.boardEl = null;\n    this.cells = [];\n    this.cellClickListeners = [];\n    this.cellEnterListeners = [];\n    this.cellLeaveListeners = [];\n    this.newGameListeners = [];\n    this.saveGameListeners = [];\n    this.loadGameListeners = [];\n  }\n\n  bindToDOM(container) {\n    if (!(container instanceof HTMLElement)) {\n      throw new Error('container is not HTMLElement');\n    }\n    this.container = container;\n  }\n\n  /**\n   * Draws boardEl with specific theme\n   *\n   * @param theme\n   */\n  drawUi(theme) {\n    this.checkBinding();\n\n    this.container.innerHTML = `\n      <div class=\"controls\">\n        <button data-id=\"action-restart\" class=\"btn\">New Game</button>\n        <button data-id=\"action-save\" class=\"btn\">Save Game</button>\n        <button data-id=\"action-load\" class=\"btn\">Load Game</button>\n      </div>\n      <div class=\"board-container\">\n        <div data-id=\"board\" class=\"board\"></div>\n      </div>\n    `;\n\n    this.newGameEl = this.container.querySelector('[data-id=action-restart]');\n    this.saveGameEl = this.container.querySelector('[data-id=action-save]');\n    this.loadGameEl = this.container.querySelector('[data-id=action-load]');\n\n    this.newGameEl.addEventListener('click', (event) => this.onNewGameClick(event));\n    this.saveGameEl.addEventListener('click', (event) => this.onSaveGameClick(event));\n    this.loadGameEl.addEventListener('click', (event) => this.onLoadGameClick(event));\n\n    this.boardEl = this.container.querySelector('[data-id=board]');\n\n    this.boardEl.classList.add(theme);\n    for (let i = 0; i < this.boardSize ** 2; i += 1) {\n      const cellEl = document.createElement('div');\n      cellEl.classList.add('cell', 'map-tile', `map-tile-${calcTileType(i, this.boardSize)}`);\n      cellEl.addEventListener('mouseenter', (event) => this.onCellEnter(event));\n      cellEl.addEventListener('mouseleave', (event) => this.onCellLeave(event));\n      cellEl.addEventListener('click', (event) => this.onCellClick(event));\n      this.boardEl.appendChild(cellEl);\n    }\n\n    this.cells = Array.from(this.boardEl.children);\n  }\n\n  /**\n   * Draws positions (with chars) on boardEl\n   *\n   * @param positions array of PositionedCharacter objects\n   */\n  redrawPositions(positions) {\n    for (const cell of this.cells) {\n      cell.innerHTML = '';\n    }\n\n    for (const position of positions) {\n      const cellEl = this.boardEl.children[position.position];\n      const charEl = document.createElement('div');\n      charEl.classList.add('character', position.character.type);\n\n      const healthEl = document.createElement('div');\n      healthEl.classList.add('health-level');\n\n      const healthIndicatorEl = document.createElement('div');\n      healthIndicatorEl.classList.add('health-level-indicator', `health-level-indicator-${calcHealthLevel(position.character.health)}`);\n      healthIndicatorEl.style.width = `${position.character.health}%`;\n      healthEl.appendChild(healthIndicatorEl);\n\n      charEl.appendChild(healthEl);\n      cellEl.appendChild(charEl);\n    }\n  }\n\n  /**\n   * Add listener to mouse enter for cell\n   *\n   * @param callback\n   */\n  addCellEnterListener(callback) {\n    this.cellEnterListeners.push(callback);\n  }\n\n  /**\n   * Add listener to mouse leave for cell\n   *\n   * @param callback\n   */\n  addCellLeaveListener(callback) {\n    this.cellLeaveListeners.push(callback);\n  }\n\n  /**\n   * Add listener to mouse click for cell\n   *\n   * @param callback\n   */\n  addCellClickListener(callback) {\n    this.cellClickListeners.push(callback);\n  }\n\n  /**\n   * Add listener to \"New Game\" button click\n   *\n   * @param callback\n   */\n  addNewGameListener(callback) {\n    this.newGameListeners.push(callback);\n  }\n\n  /**\n   * Add listener to \"Save Game\" button click\n   *\n   * @param callback\n   */\n  addSaveGameListener(callback) {\n    this.saveGameListeners.push(callback);\n  }\n\n  /**\n   * Add listener to \"Load Game\" button click\n   *\n   * @param callback\n   */\n  addLoadGameListener(callback) {\n    this.loadGameListeners.push(callback);\n  }\n\n  onCellEnter(event) {\n    event.preventDefault();\n    const index = this.cells.indexOf(event.currentTarget);\n    this.cellEnterListeners.forEach((o) => o.call(null, index));\n  }\n\n  onCellLeave(event) {\n    event.preventDefault();\n    const index = this.cells.indexOf(event.currentTarget);\n    this.cellLeaveListeners.forEach((o) => o.call(null, index));\n  }\n\n  onCellClick(event) {\n    const index = this.cells.indexOf(event.currentTarget);\n    this.cellClickListeners.forEach((o) => o.call(null, index));\n  }\n\n  onNewGameClick(event) {\n    event.preventDefault();\n    this.newGameListeners.forEach((o) => o.call(null));\n  }\n\n  onSaveGameClick(event) {\n    event.preventDefault();\n    this.saveGameListeners.forEach((o) => o.call(null));\n  }\n\n  onLoadGameClick(event) {\n    event.preventDefault();\n    this.loadGameListeners.forEach((o) => o.call(null));\n  }\n\n  static showError(message) {\n    alert(message);\n  }\n\n  static showMessage(message) {\n    alert(message);\n  }\n\n  selectCell(index, color = 'yellow') {\n    this.deselectCell(index);\n    this.cells[index].classList.add('selected', `selected-${color}`);\n  }\n\n  deselectCell(index) {\n    const cell = this.cells[index];\n    cell.classList.remove(...Array.from(cell.classList)\n      .filter((o) => o.startsWith('selected')));\n  }\n\n  showCellTooltip(message, index) {\n    this.cells[index].title = message;\n  }\n\n  hideCellTooltip(index) {\n    this.cells[index].title = '';\n  }\n\n  showDamage(index, damage) {\n    return new Promise((resolve) => {\n      const cell = this.cells[index];\n      const damageEl = document.createElement('span');\n      damageEl.textContent = damage;\n      damageEl.classList.add('damage');\n      cell.appendChild(damageEl);\n\n      damageEl.addEventListener('animationend', () => {\n        cell.removeChild(damageEl);\n        resolve();\n      });\n    });\n  }\n\n  setCursor(cursor) {\n    this.boardEl.style.cursor = cursor;\n  }\n\n  checkBinding() {\n    if (this.container === null) {\n      throw new Error('GamePlay not bind to DOM');\n    }\n  }\n}\n","/**\n * @todo\n * @param index - индекс поля\n * @param boardSize - размер квадратного поля (в длину или ширину)\n * @returns строка - тип ячейки на поле:\n *\n * top-left\n * top-right\n * top\n * bottom-left\n * bottom-right\n * bottom\n * right\n * left\n * center\n *\n * @example\n * ```js\n * calcTileType(0, 8); // 'top-left'\n * calcTileType(1, 8); // 'top'\n * calcTileType(63, 8); // 'bottom-right'\n * calcTileType(7, 7); // 'left'\n * ```\n * */\nexport function calcTileType(index, boardSize) {\n  if (index >= boardSize ** 2 || index < 0) {\n    return 'invalid value';\n  }\n  if (index === 0) {\n    return 'top-left';\n  }\n  if (index === boardSize - 1) {\n    return 'top-right';\n  }\n  if (index === boardSize ** 2 - boardSize) {\n    return 'bottom-left';\n  }\n  if (index === boardSize ** 2 - 1) {\n    return 'bottom-right';\n  }\n  if (index % boardSize === 0) {\n    return 'left';\n  }\n  if ((index + 1) % boardSize === 0) {\n    return 'right';\n  }\n  if (index > 0 && index < boardSize) {\n    return 'top';\n  }\n  if (index < (boardSize) ** 2 - 1 && index > boardSize ** 2 - boardSize) {\n    return 'bottom';\n  }\n\n  return 'center';\n}\n\nexport function calcHealthLevel(health) {\n  if (health < 15) {\n    return 'critical';\n  }\n\n  if (health < 50) {\n    return 'normal';\n  }\n\n  return 'high';\n}\n","export default class GameStateService {\n  constructor(storage) {\n    this.storage = storage;\n  }\n\n  save(state) {\n    this.storage.setItem('state', JSON.stringify(state));\n  }\n\n  load() {\n    try {\n      return JSON.parse(this.storage.getItem('state'));\n    } catch (e) {\n      throw new Error('Invalid state');\n    }\n  }\n}\n","import themes from './themes';\nimport { generateTeam } from './generators';\nimport PositionedCharacter from './PositionedCharacter';\n\nexport default class GameController {\n  constructor(gamePlay, stateService) {\n    this.gamePlay = gamePlay;\n    this.stateService = stateService;\n  }\n\n  init() {\n    this.gamePlay.drawUi(themes.prairie);\n    const allies = generateTeam(['Bowman', 'Magician', 'Swordsman'], 2, 3);\n    const enemies = generateTeam(['Daemon', 'Undead', 'Vampire'], 2, 3);\n    const positionedAllies = [];\n    const positionedEnemies = [];\n    for (let i = 0; i < allies.length; i += 1) {\n      positionedAllies.push(PositionedCharacter(allies[i]));\n      positionedEnemies.push(PositionedCharacter(enemies[i]));\n    }\n    this.gamePlay.redrawPositions(positionedAllies);\n    // TODO: add event listeners to gamePlay events\n    // TODO: load saved stated from stateService\n  }\n\n  // onCellClick(index) {\n  //   // TODO: react to click\n  // }\n\n  // onCellEnter(index) {\n  //   // TODO: react to mouse enter\n  // }\n\n  // onCellLeave(index) {\n  //   // TODO: react to mouse leave\n  // }\n}\n"],"names":["characterGenerator","allowedTypes","maxLevel","index","Math","floor","random","length","level","generateTeam","characterCount","actualCharacters","i","newChar","next","value","push","Character","constructor","type","this","attack","defence","health","Error","PositionedCharacter","character","position","gamePlay","boardSize","container","boardEl","cells","cellClickListeners","cellEnterListeners","cellLeaveListeners","newGameListeners","saveGameListeners","loadGameListeners","bindToDOM","HTMLElement","drawUi","theme","checkBinding","innerHTML","newGameEl","querySelector","saveGameEl","loadGameEl","addEventListener","event","onNewGameClick","onSaveGameClick","onLoadGameClick","classList","add","cellEl","document","createElement","onCellEnter","onCellLeave","onCellClick","appendChild","Array","from","children","redrawPositions","positions","cell","charEl","healthEl","healthIndicatorEl","style","width","addCellEnterListener","callback","addCellLeaveListener","addCellClickListener","addNewGameListener","addSaveGameListener","addLoadGameListener","preventDefault","indexOf","currentTarget","forEach","o","call","showError","message","alert","showMessage","selectCell","color","deselectCell","remove","filter","startsWith","showCellTooltip","title","hideCellTooltip","showDamage","damage","Promise","resolve","damageEl","textContent","removeChild","setCursor","cursor","stateService","storage","save","state","setItem","JSON","stringify","load","parse","getItem","e","localStorage","gameCtrl","init","allies","enemies","positionedAllies","positionedEnemies"],"sourceRoot":""}